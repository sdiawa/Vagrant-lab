===========================
Cheat Sheet DevOps Quotidien – Version Commentée
===========================

1️⃣ Linux / CLI de base
----------------------
ls -lAh  -> Liste détaillée des fichiers, incluant fichiers cachés, tailles lisibles
cd /path/to/dir  -> Changer de répertoire
pwd  -> Afficher le chemin actuel
mkdir -p newdir  -> Créer un répertoire (avec parents si nécessaire)
rm -rf dir_or_file  -> Supprimer un fichier ou répertoire de force
cp -r src dest  -> Copier répertoire ou fichier
mv src dest  -> Déplacer ou renommer fichier/dossier
find . -name "pattern"  -> Chercher fichiers selon motif
du -sh *  -> Taille fichiers/répertoires
df -h  -> Espace disque disponible

Processus et ressources
top  -> Monitorer les processus en temps réel
htop  -> Version améliorée de top (si installé)
ps aux | grep process  -> Chercher un processus spécifique
kill <pid>  -> Terminer un processus
kill -9 <pid>  -> Forcer l’arrêt
free -h  -> Voir la mémoire disponible
uptime  -> Charge du système

Réseau
ping google.com  -> Tester la connectivité réseau
curl -v http://url  -> Tester endpoint HTTP
wget http://url  -> Télécharger fichier
netstat -tulnp  -> Lister ports en écoute et services associés
ss -tulnp  -> Alternative à netstat
telnet host port  -> Tester connexion TCP

Utilisateurs / permissions
whoami  -> Afficher utilisateur actuel
id  -> Afficher UID, GID et groupes
sudo su - username  -> Passer à un autre utilisateur
chmod 755 file  -> Changer permissions
chown user:group file  -> Changer propriétaire/groupe

Cron / planification
crontab -e  -> Editer les tâches cron
crontab -l  -> Lister tâches cron
systemctl status cron  -> Vérifier service cron
systemctl restart cron  -> Redémarrer cron
0 * * * * /home/user/script.sh  -> Exemple job toutes les heures

2️⃣ IBM Cloud CLI / COS
----------------------
ibmcloud login -a https://cloud.ibm.com -r <region> -g <resource-group>  -> Connexion à IBM Cloud
ibmcloud target  -> Vérifier org, space, région
ibmcloud ks clusters  -> Lister clusters Kubernetes
ibmcloud ks cluster config --cluster <cluster-name>  -> Configurer kubectl pour le cluster

COS (Cloud Object Storage)
ibmcloud cos buckets  -> Lister buckets
ibmcloud cos objects --bucket <bucket-name>  -> Lister objets
ibmcloud cos object-put --bucket <bucket> --key <key> --file <localfile>  -> Upload fichier
ibmcloud cos object-get --bucket <bucket> --key <key> --file <localfile>  -> Télécharger fichier
ibmcloud cos object-delete --bucket <bucket> --key <key>  -> Supprimer objet

3️⃣ Kubernetes CLI (kubectl)
----------------------------
kubectl get nodes  -> Lister tous les nœuds
kubectl get pods -A  -> Lister tous les pods
kubectl get svc -A  -> Lister tous les services
kubectl get deployments -A  -> Lister deployments
kubectl describe pod <pod> -n <namespace>  -> Voir détails pod
kubectl logs <pod> -n <namespace>  -> Logs pod
kubectl exec -it <pod> -n <namespace> -- /bin/bash  -> Shell dans pod
kubectl port-forward <pod> 8080:80  -> Forward port local vers pod
kubectl apply -f <file.yaml>  -> Appliquer manifeste
kubectl delete -f <file.yaml>  -> Supprimer objet
kubectl rollout status deployment/<deployment-name>  -> Status déploiement
kubectl rollout restart deployment/<deployment-name>  -> Redémarrer déploiement
kubectl top pods -n <namespace>  -> CPU/RAM pods
kubectl top nodes  -> CPU/RAM nodes

Namespace / contexte :
kubectl config get-contexts      # Voir contextes Kubernetes
kubectl config use-context <ctx> # Changer de cluster ou namespace
kubectl config set-context --current --namespace=<ns>  # Changer namespace par défaut

Debug pods avancé :
kubectl exec -it <pod> -- netstat -tulnp       # Vérifier ports dans pod
kubectl exec -it <pod> -- lsof -i             # Vérifier fichiers ouverts
kubectl logs -f --tail=100 <pod>              # Logs récents et suivi

Persistent Volumes avancés :
kubectl describe pv <pv>        # Infos PV
kubectl describe pvc <pvc>      # Infos PVC
kubectl get sc                  # StorageClass disponibles

Pods
kubectl get pods --field-selector=status.phase=Failed -A  # Pods échoués
kubectl get pods --field-selector=status.phase=Running -A # Pods en cours
kubectl describe pod <pod> -n <ns>      # Détails complet pod
kubectl logs <pod> -c <container> -n <ns>  # Logs d’un conteneur spécifique
kubectl logs -f <pod> -n <ns>           # Logs en temps réel
kubectl logs --previous <pod> -n <ns>   # Logs du conteneur précédent
kubectl exec -it <pod> -n <ns> -- bash  # Shell interactif dans le pod
kubectl cp <pod>:/path/to/file /local/path -n <ns>  # Copier fichiers depuis pod
kubectl cp /local/path <pod>:/path/to/dir -n <ns>  # Copier fichiers vers pod

Services / Networking
kubectl get svc -A                        # Lister tous les services
kubectl describe svc <service> -n <ns>   # Détails service
kubectl port-forward <pod> 8080:80       # Forward port pod vers local
kubectl get ingress -A                    # Liste ingress pour accès HTTP/HTTPS
kubectl describe ingress <ingress> -n <ns> # Détails ingress
kubectl get networkpolicy -A              # Lister NetworkPolicies
kubectl describe networkpolicy <np> -n <ns> # Détails NetworkPolicy

Deployments / ReplicaSets
kubectl get deployments -A                # Lister tous les deployments
kubectl describe deployment <deployment> -n <ns> # Détails deployment
kubectl rollout status deployment/<deployment> -n <ns>  # Status rollout
kubectl rollout history deployment/<deployment> -n <ns> # Historique rollout
kubectl rollout undo deployment/<deployment> -n <ns>    # Rollback deployment
kubectl scale deployment <deployment> --replicas=5 -n <ns>  # Scale replicas

StatefulSets / DaemonSets
kubectl get daemonsets -A           # Voir tous les DaemonSets
kubectl describe daemonset <ds> -n <ns>  # Vérifier sur quels nodes les pods tournent et événements
kubectl get statefulsets -A         # Lister StatefulSets
kubectl describe statefulset <sts> -n <ns>  # Détails pods, PVC et ordre de création

ConfigMaps / Secrets
kubectl get configmap -n <ns>           # Lister ConfigMaps
kubectl describe configmap <cm> -n <ns> # Détails et clés
kubectl get secret -n <ns>              # Lister secrets
kubectl describe secret <secret> -n <ns> # Vérifier type et annotations
kubectl create secret generic <name> --from-literal=key=value -n <ns>  # Créer secret
kubectl create configmap <name> --from-file=path/to/file -n <ns>       # Créer configmap

Persistent Volumes / Claims
kubectl get pv                           # Lister PV
kubectl get pvc -n <ns>                  # Lister PVC
kubectl describe pv <pv>                 # Détails PV
kubectl describe pvc <pvc> -n <ns>       # Détails PVC
kubectl get storageclass                 # Lister StorageClass

Debug & Monitoring
kubectl get events -A --sort-by='.metadata.creationTimestamp'  # Evénements récents
kubectl describe node <node>           # Détails nœud : pods, ressources, taints
kubectl top nodes                       # CPU/RAM nodes
kubectl top pods -n <ns>                # CPU/RAM pods
kubectl describe pod <pod> -n <ns>      # Infos ressources et events
kubectl logs -f <pod>                   # Logs en continu
watch kubectl get pods -A               # Rafraîchir pods en temps réel
kubectl auth can-i <action> --as <user> -n <ns>  # Vérifier droits RBAC

Admission / RBAC
kubectl get rolebinding -n <ns>               # Lister RoleBindings
kubectl get clusterrolebinding                # Lister ClusterRoleBindings
kubectl describe role <role> -n <ns>         # Détails d’un role
kubectl describe clusterrole <clusterrole>   # Détails d’un clusterrole
kubectl auth can-i <action> --as <user> -n <ns>  # Vérifier droits d’un utilisateur

Kubernetes – Helm / Diagnostics avancés
Vérifier les releases Helm
helm list -A                     # Lister toutes les releases Helm dans tous les namespaces
helm status <release> -n <ns>    # Statut d’une release spécifique
helm get all <release> -n <ns>   # Détails complets : chart, values, hooks, manifest
helm get values <release> -n <ns> # Valeurs appliquées pour une release

Installer / mettre à jour une release
helm install <release> <chart> -n <namespace> --create-namespace  # Installer un chart
helm upgrade <release> <chart> -n <namespace> --values values.yaml  # Mise à jour avec valeurs personnalisées

Rollback / désinstallation
helm rollback <release> <revision> -n <namespace>  # Revenir à une version précédente
helm uninstall <release> -n <namespace>           # Supprimer une release

Vérification et debug
helm history <release> -n <namespace>        # Historique des releases
helm diff upgrade <release> <chart> -n <ns>  # Différence entre état actuel et nouveau chart (plugin helm-diff)
helm test <release> -n <namespace>           # Exécuter les tests définis pour la release

Repository Helm
helm repo add <name> <url>       # Ajouter un repo
helm repo update                 # Mettre à jour les charts
helm search repo <chart>         # Chercher un chart dans les repos

4️⃣ OpenShift / Red Hat CLI (oc)
--------------------------------
oc login <api-server> --token=<token> --namespace=<namespace>  -> Connexion cluster OpenShift
oc get projects  -> Lister projets
oc get pods  -> Lister pods
oc get svc  -> Lister services
oc apply -f <file.yaml>  -> Appliquer manifeste
oc delete -f <file.yaml>  -> Supprimer objet
oc logs <pod-name>  -> Logs pod
oc rsh <pod-name>  -> Shell dans pod

5️⃣ ArgoCD CLI
--------------
argocd login <server> --username <user> --password <pwd>  -> Connexion serveur ArgoCD
argocd app list  -> Lister applications
argocd app get <app-name>  -> Détails application
argocd app sync <app-name>  -> Synchroniser application
argocd app diff <app-name>  -> Comparer Git vs cluster
argocd app wait <app-name> --timeout 60  -> Attendre sync

6️⃣ Docker / Containers
----------------------
docker ps -a  -> Lister containers
docker images  -> Lister images
docker logs <container>  -> Logs container
docker exec -it <container> /bin/bash  -> Shell container
docker stop <container>  -> Stop container
docker rm <container>  -> Supprimer container
docker rmi <image>  -> Supprimer image

7️⃣ Git / CI-CD
---------------
git status  -> Vérifier modifications locales
git pull origin main  -> Récupérer dernières modifs
git checkout <branch>  -> Changer de branche
git merge <branch>  -> Fusionner branches
git add .  -> Ajouter fichiers pour commit
git commit -m "message"  -> Commit
git push origin <branch>  -> Pousser modifications

8️⃣ OpenSSL / KDB / Certificats
-------------------------------
openssl genrsa -out key.pem 2048  -> Générer clé privée RSA
openssl req -new -key key.pem -out request.csr  -> Générer CSR
openssl x509 -in cert.pem -out cert.der -outform DER  -> Convertir PEM->DER
openssl x509 -in cert.pem -text -noout  -> Vérifier certificat
openssl s_client -connect host:443  -> Tester connexion SSL/TLS
gskcapicmd -keydb -open kdb.kdb -stashed -list  -> Lister KDB
gskcapicmd -cert -add -db kdb.kdb -label "label" -file cert.arm  -> Ajouter certificat
gskcapicmd -cert -details -db kdb.kdb -label "label"  -> Vérifier certificat

Vérification certificat :
openssl verify cert.pem
openssl x509 -noout -text -in cert.pem

openssl pkcs12 -export -out cert.pfx -inkey key.pem -in cert.pem



9️⃣ Surveillance / Debug
------------------------
tail -f /var/log/syslog  -> Suivre logs
journalctl -u <service>  -> Logs service systemd
watch kubectl get pods -A  -> Rafraîchissement pods
kubectl describe pod <pod>  -> Details pod
kubectl logs <pod> -n <namespace>  -> Logs pod

10️⃣ Tips DevOps
----------------
- Crée alias bash pour commandes fréquentes
- Toujours vérifier namespace/cluster avant apply/delete
- Automatiser backups COS et sync ArgoCD via scripts/crons
- Utiliser fichier .env pour variables d'environnement (cluster, token...)


Diagnostics serveur Red Hat / Linux
Commande
Explication
top
Voir l’utilisation CPU/mémoire en temps réel
htop
Version améliorée de top (si installée)
uptime
Charge moyenne du serveur depuis le démarrage
free -h
Mémoire utilisée et disponible
vmstat 1 5
Statistiques CPU, mémoire, swap toutes les secondes 5 fois
iostat -xz 1 5
Stats d’I/O disque détaillées toutes les secondes
sar -u 1 5
Historique et stats CPU avec le paquet sysstat
df -h
Usage disque par partition
du -sh /path/to/dir
Taille d’un répertoire précis
lsblk
Voir les périphériques de stockage et partitions
mount
Liste des systèmes de fichiers montés
ps aux --sort=-%cpu
Lister les processus les plus consommateurs CPU
ps aux --sort=-%mem
Lister les processus les plus consommateurs mémoire
netstat -tulnp
Ports en écoute et services associés
ss -tulnp
Alternative à netstat
ping <host>
Vérifier la connectivité réseau
traceroute <host>
Suivre le chemin réseau jusqu’à un hôte
journalctl -xe
Logs système récents et erreurs critiques
tail -f /var/log/messages
Suivre les logs principaux du système
systemctl status <service>
Vérifier état d’un service systemd
systemctl restart <service>
Redémarrer un service
`dmesg
tail -20`
uptime && w
Charge serveur + utilisateurs connectés
sar -n DEV 1 5
Stats trafic réseau par interface

df -h                  # Usage disque par partition (lisible)
df -i                  # Vérifier les inodes utilisés (important si nombreux petits fichiers)

Trouver les gros fichiers / répertoires
du -sh /path/*          # Taille de chaque sous-répertoire/fichier
du -ah /path | sort -rh | head -20   # 20 fichiers/répertoires les plus gros

Trouver fichiers volumineux rapidement
find / -type f -size +500M -exec ls -lh {} \; | awk '{ print $9 ": " $5 }'
# Liste les fichiers > 500 Mo avec taille

Compression et décompression
# Compression
tar -czvf archive.tar.gz /path/to/dir    # Compresser un répertoire
gzip fichier.txt                         # Compresser un fichier
bzip2 fichier.txt                        # Compression plus efficace
zip -r archive.zip /path/to/dir          # Compression zip

# Décompression
tar -xzvf archive.tar.gz                 # Décompresser tar.gz
gunzip fichier.txt.gz                     # Décompresser gzip
bunzip2 fichier.txt.bz2                   # Décompresser bzip2
unzip archive.zip                         # Décompresser zip

Supprimer les anciens fichiers / logs volumineux
# Supprimer les fichiers logs plus anciens que 30 jours
find /var/log -type f -name "*.log" -mtime +30 -exec rm -f {} \;

# Archiver les logs avant suppression
find /var/log -type f -name "*.log" -mtime +30 -exec tar -rvf old_logs.tar {} \; -exec rm -f {} \;

Surveiller l’utilisation en temps réel
watch -n 5 'df -h /'           # Rafraîchir toutes les 5s l’espace disque
watch -n 5 'du -sh /path/*'    # Surveiller taille des sous-répertoires

Analyser répertoires volumineux rapidement
ncdu /path/to/dir   # Interface ncurses interactive pour explorer l’espace disque

Bonus – éviter saturation future
# Identifier les fichiers temporaires volumineux
find /tmp -type f -size +100M

# Vérifier corbeille de l’utilisateur
du -sh ~/.local/share/Trash

# Rotation des logs (logrotate)
logrotate -d /etc/logrotate.conf    # Tester configuration
logrotate -f /etc/logrotate.conf    # Forcer rotation

Processus avancés :
lsof -i :<port>          # Quel process écoute sur un port
strace -p <pid>          # Trace system calls d’un processus

Système de fichiers / disque :
lsattr /path             # Attributs fichiers (immutable, etc.)
chattr +i fichier        # Rendre fichier immuable
xfs_quota -x -c "report" /mountpoint  # Quota XFS

Surveillance réseau :
iftop                   # Surveillance trafic réseau en temps réel
nload                   # Graphique de trafic réseau
tcpdump -i eth0         # Capture paquets réseau




